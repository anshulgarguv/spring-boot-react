{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","otherTeamName","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","console","log","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79e737ce.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport \"./MatchDetailCard.scss\";\n\nexport const MatchDetailCard = ({teamName, match}) => {\n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n    return (\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\n          <div>\n          <span className=\"vs\">vs</span>\n          <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\n          <h2 className=\"match-date\">{match.date}</h2>\n          <h3 className=\"match-venue\">at {match.venue}</h3>\n          <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </h3>\n        </div>\n        <div className=\"additional-detail\">\n          <h3>First Innings</h3>\n          <p>{match.team1}</p>\n          <h3>Second Innings</h3>\n          <p>{match.team2}</p>\n          <h3>Man of the match</h3>\n          <p>{match.playerOfMatch}</p>\n          <h3>Umpires</h3>\n          <p>{match.umpire1}, {match.umpire2}</p>\n          \n\n        </div>\n        \n        </div>\n  );\n}","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './MatchSmallCard.scss';\nexport const MatchSmallCard = ({match,teamName}) =>{\n  const otherTeamName = teamName === match.team1 ? match.team2 : match.team1;\n  const otherTeamRoute = `/teams/${otherTeamName}`;\n  const isMatchWon = teamName === match.matchWinner;\n  return (\n    <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n      <span className=\"vs\">vs</span>\n      <h1><Link to={otherTeamRoute}>{otherTeamName}</Link></h1>\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result} </p>\n        \n    </div>\n  );\n}","import {React,useEffect,useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\nimport './TeamPage.scss';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport {Link} from 'react-router-dom';\nexport const TeamPage = () =>{\n\n    const[team,setTeam] = useState({matches:[]});\n    const {teamName} = useParams();\n    useEffect(\n        () =>{\n            const fetchTeam = async () =>{\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n                const data = await response.json();\n                console.log(data);\n                setTeam(data);\n            };\n            fetchTeam();\n        },[teamName]\n    );\n  if(!team || !team.teamName){\n    return <h1>Team Not found</h1>;\n  }\n  return (\n    <div className=\"TeamPage\">\n      <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\n      <div className=\"win-loss-section\">Wins/Losses\n              <PieChart\n                data={[\n                    { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                    { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                ]}\n                />\n      </div>\n      <div className=\"match-detail-section\">\n      <h3>Latest Matches</h3>\n      <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]}/>\n      </div>\n      {team.matches.slice(1).map(match => <MatchSmallCard key ={match.id} teamName = {team.teamName} match = {match}/>)}\n      <div className=\"more-link\">\n      <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More </Link>\n        </div>\n    </div>\n  );\n}\n\n","import {React} from 'react';\nimport {Link} from 'react-router-dom';\nimport './YearSelector.scss';\nexport const YearSelector = ({teamName}) => {\n    let years =[];\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n    for (let i = startYear; i <= endYear; i++ ) {\n        years.push(i);\n    }\n\n    return (\n        <ol className=\"YearSelector\">\n        { years.map(year => (\n            <li key={year}>\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n            </li>\n        )) }\n        </ol>\n    )\n}","import {React,useEffect,useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport { MatchDetailCard } from '../components/MatchDetailCard';\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss';\nexport const MatchPage = () =>{\n\n  const [matches,setMatches] = useState([]);\n  const {teamName,year} = useParams();\n  useEffect(\n    () =>{\n        const fetchMatches = async () =>{\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n            const data = await response.json();\n            console.log(data);\n            setMatches(data);\n        };\n        fetchMatches();\n    },[teamName,year]\n);\n  return (\n    <div className=\"MatchPage\">\n\n      \n      <div className=\"year-selector\">\n      <h3> Select Year </h3>\n        <YearSelector teamName={teamName}/>\n      </div>\n      <div>\n      <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n        {matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName} match = {match}/>)}\n      </div>\n    </div>\n  );\n}\n\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './TeamTile.scss';\nexport const TeamTile = ({teamName}) => {\n\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                    <Link to={`/teams/${teamName}`}>\n                        {teamName}\n                    </Link>\n                </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport './HomePage.scss';\nimport { TeamTile } from '../components/TeamTile';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n    useEffect(\n        () => {\n         const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n\n         };\n         fetchAllTeams();\n            \n\n\n        }, []\n    );\n\n    return (\n        <div className=\"HomePage\">\n            <div className=\"header-section\">\n                <h1 className=\"app-name\">Java Brains IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                { teams.map(team => <TeamTile key={team.id} teamName={team.teamName} />)}\n            </div>\n        </div>\n        \n    );\n}","import './App.scss';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}